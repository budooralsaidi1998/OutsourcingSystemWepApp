@page "/register-client"
@using OutsourcingSystemWepApp.Data.DTOs;
@using OutsourcingSystemWepApp.Services;
@inject IClientService ClientService
@inject NavigationManager Navigation

<h3>Register as Client</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="registerModel.Name" class="form-control" required />
    </div>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" type="email" required />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" class="form-control" type="password" required />
    </div>


    <div>
        <label>Company Name:</label>
        <InputText @bind-Value="registerModel.CompanyName" class="form-control" required />
    </div>

    <div>
        <label>Industry:</label>
        <InputText @bind-Value="registerModel.Industry" class="form-control" required />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

@code {
    private RegisterClientDto registerModel = new RegisterClientDto();
    private string ErrorMessage;

    // private async Task HandleRegister()
    // {
    //     try
    //     {
    //         var userInput = new UserInputDto
    //             {
    //                 Name = registerModel.Name,
    //                 Email = registerModel.Email,
    //                 Password = registerModel.Password,
    //                 CompanyName = registerModel.CompanyName,
    //                 Industry = registerModel.Industry
    //             };


    //         await ClientService.RegisterClient(userInput);
    //         Navigation.NavigateTo("/client/home");
    //     }
    //     catch (Exception ex)
    //     {
    //         ErrorMessage = ex.Message;
    //     }
    // }


    // private async Task HandleRegister()
    // {
    //     try
    //     {
    //         var userInput = new UserInputDto
    //             {
    //                 Name = registerModel.Name,
    //                 Email = registerModel.Email,
    //                 Password = registerModel.Password,
    //                 CompanyName = registerModel.CompanyName,
    //                 Industry = registerModel.Industry
    //             };

    //         await ClientService.RegisterClient(userInput);
    //         Navigation.NavigateTo("/client/home");
    //     }
    //     catch (Exception ex)
    //     {
    //         ErrorMessage = ex.Message;
    //     }
    // }

    private async Task HandleRegister()
    {
        try
        {
            var clientData = new RegisterClientDto
                {
                    Name = registerModel.Name,
                    Email = registerModel.Email,
                    Password = registerModel.Password,
                    CompanyName = registerModel.CompanyName,
                    Industry = registerModel.Industry
                };

            await ClientService.RegisterClient(clientData);
            Navigation.NavigateTo("/client/home");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

}
