@* @page "/register-admin"
@using OutsourcingSystemWepApp.Data.DTOs;
@using OutsourcingSystemWepApp.Services;
@using MudBlazor

@inject IAdminService AdminService
@inject NavigationManager Navigation

<h3>Register as Admin</h3>

<EditForm Model="adminModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="adminModel.Name" class="form-control" required />
    </div>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="adminModel.Email" class="form-control" type="email" required />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="adminModel.Password" class="form-control" type="password" required />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private AdminRegisterDto adminModel = new AdminRegisterDto();

    private async Task HandleRegister()
    {
        try
        {
            var result = await AdminService.RegisterAdmin(adminModel);
            if (result)
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {

        }
    }
}
 *@
 @layout Layout.LoginLayout
@page "/register-admin"
@using OutsourcingSystemWepApp.Data.DTOs;
@using OutsourcingSystemWepApp.Services;
@inject IAdminService AdminService
@inject NavigationManager Navigation

<style>
   
    body {
        background: url('/images/image.png') no-repeat center center fixed;
        background-size: cover;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        font-family: 'Poppins', sans-serif;
        margin: 0;
    }

  
    .register-container {
        background: rgba(255, 255, 255, 0.9);
        padding: 50px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        text-align: center;
        width: 450px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .register-title {
        font-size: 26px;
        color: #14a800;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .input-group {
        width: 100%;
        margin-bottom: 20px;
    }

    .input-group label {
        display: block;
        text-align: left;
        font-weight: bold;
        margin-bottom: 5px;
        color: #333;
    }

    .input-group input {
        width: 100%;
        height: 50px;
        padding: 12px;
        font-size: 18px;
        border: 1px solid #ccc;
        border-radius: 6px;
        background: #f9f9f9;
        transition: border-color 0.3s ease-in-out;
    }

    .input-group input:focus {
        border-color: #14a800;
        outline: none;
        box-shadow: 0 0 5px rgba(20, 168, 0, 0.5);
    }

 
    .register-button {
        width: 100%;
        height: 55px;
        padding: 12px;
        background: linear-gradient(90deg, #14a800 0%, #0e7a00 100%);
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 20px;
        transition: all 0.3s ease-in-out;
        font-weight: bold;
    }

    .register-button:hover {
        background: linear-gradient(90deg, #0e7a00 0%, #14a800 100%);
        transform: scale(1.05);
    }

 
    .alert-danger {
        margin-top: 15px;
        color: red;
        font-size: 16px;
        text-align: center;
    }
</style>


<div class="register-container">
    <h3 class="register-title">Register as Admin</h3>

    <EditForm Model="adminModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="input-group">
         
            <InputText @bind-Value="adminModel.Name" class="form-control" placeholder="Full Name" required />
        </div>

        <div class="input-group">
        
            <InputText @bind-Value="adminModel.Email" class="form-control" type="email" placeholder="Email" required />
        </div>

        <div class="input-group">
            
            <InputText @bind-Value="adminModel.Password" class="form-control" type="password"  placeholder="Password" required />
        </div>

        <button type="submit" class="btn register-button">Register</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }
</div>

@code {
    private AdminRegisterDto adminModel = new AdminRegisterDto();
    private string ErrorMessage;

    private async Task HandleRegister()
    {
        try
        {
            var result = await AdminService.RegisterAdmin(adminModel);
            if (result)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                ErrorMessage = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred. Please check your information.";
        }
    }
}

